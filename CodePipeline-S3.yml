AWSTemplateFormatVersion: 2010-09-09
Description: CodePipeline-Test
Parameters:

  StackName:
    Type: String
    Default: Test-Project-S3

  ClientName:
    Description: Client Short Name
    Type: String
    Default: Web-portal-s3

  ProjectName: 
    Description: Client Short Name
    Type: String
    Default: Test-CodePipeline-s3

  # GitHubUser:
  #   Description: "The GitHub username which owns the repository to be deployed"
  #   Type: String
  #   Default: "05000"

  # GitHubAdminRepo:
  #   Description: "The name of the repository to deploy"
  #   Type: String
  #   Default: "github-aws-cicd"

  # GitHubRoomzzRepo:
  #   Description: "The name of the repository to deploy"
  #   Type: String
  #   Default: "roomzz_web"



  # GitHubBranch:
  #   Description: "The branch of the repository to deploy"
  #   Type: String
  #   Default: "cide-test"

  # GitOAuthToken: 
  #   Description: "oauth token"
  #   Type: String
  #   Default: "****"
 

Resources:  
### --- create Artifact in S3 Bucket ---
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration : Enabled
      OwnershipControls:
         Rules: 
          - ObjectOwnership: ObjectWriter 


### --- IAM role for Code Pipeline ---
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "role-${ProjectName}-${ClientName}web-${AWS::Region}" 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: codepipeline.amazonaws.com
      Policies:
        - PolicyName: !Sub "policy-${ProjectName}-${ClientName}web-${AWS::Region}" 
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: S3AccessPolicy
                Effect: Allow
                Action: 
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                Resource: "*" 

              - Sid: CodeBuildAccessPolicy
                Effect: Allow
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "iam:PassRole"
                Resource: "*"

              - Sid: cloudformationPolicy
                Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource: "*"
      Tags: 
        - Key: client
          Value: !Ref ClientName
  

### --- IAM role for codebuild project. Should give access all AWS resources needed by build and tests run by build.
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 
              - sts:AssumeRole
            Principal:
              Service: codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Sid: S3AccessPolicy
                Effect: Allow
                Action: 
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                Resource: "*" 
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                  - cloudformation:ListStacks
                  - cloudformation:Describe* 
                Resource:  "*"
              - Effect: Allow
                Action:
                  - codebuild:ListBuilds
                  - codebuild:UpdateProject
                  - codebuild:ListProjects
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:UpdateReport          
                Resource:  "*"  


### --- create codeBuild projects ---
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-CodeBuild"
      Description: CodePipeline serverless deployer.
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: src/buildspec.yml
      Artifacts:
        Name: 
          Fn::Join:
            - "-"
            - - "test-Build"
              - !Ref ClientName 
        Type: CODEPIPELINE
      # TimeoutInMinutes: 10
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER



### --- create codePipeline ---
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Fn::Join:
          - "-"
          - - "test-"
            - !Ref ClientName
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      RoleArn: !GetAtt CodePipelineRole.Arn
      Tags: 
        - Key: Name
          Value: !Ref ClientName
      Stages:
        # 1 stage - source - github
        - Name: Source
          Actions:
            - Name: S3Bucket
              RunOrder: 1   
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              OutputArtifacts: 
                - Name: SourceArtifact
              Configuration:
                # Owner: !Ref GitHubUser
                # Repo: !Ref GitHubAdminRepo
                # # Repo: !Ref GitHubRoomzzRepo
                # Branch: !Ref GitHubBranch
                # OAuthToken: !Ref GitOAuthToken
                S3Bucket: 
                  Ref: git-hub-cicd-test-demo-123 
                S3ObjectKey: 
                  Ref: buildspec.zip
        # 2 stage - build - CodeBuild  
        - Name: Build
          Actions: 
            - Name: Build
              RunOrder: 1   
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
                EnvironmentVariables: 
                  Fn::Join:
                    - "" 
                    - - '['
                      - '{"name":"STACK_NAME", "value": "'
                      - !Ref StackName
                      - '", "type":"PLAINTEXT"}]'